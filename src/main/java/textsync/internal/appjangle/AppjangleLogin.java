/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package textsync.internal.appjangle;

import io.nextweb.Session;
import io.nextweb.common.LoginResult;
import io.nextweb.common.User;
import io.nextweb.jre.Nextweb;
import io.nextweb.operations.exceptions.ChallengedResult;
import io.nextweb.operations.exceptions.LoginFailuresListener;

import java.awt.BorderLayout;
import java.awt.Component;
import java.util.prefs.Preferences;

import javax.swing.JOptionPane;

import de.mxro.fn.Closure;
import one.client.jre.OneJre;
import one.core.domain.OneClient;
import one.core.dsl.CoreDsl;
import one.core.dsl.callbacks.WhenUserLoggedIn;
import one.core.dsl.callbacks.results.WithChallengedContext;
import one.core.dsl.callbacks.results.WithUserRegisteredResult;
import one.core.dsl.grammars.LoginWithSessionIdParameters;
import one.core.dsl.grammars.LoginWithUserDetailsParameters;
import textsync.TextSync;
import textsync.internal.ui.LogginInPanel;

/**
 *
 * @author mroh004
 */
public class AppjangleLogin extends javax.swing.JPanel {
    
	private static final long serialVersionUID = 1L;
	private final WhenLoggedIn callback;
    private LogginInPanel lp;
    
    private final class DefaultLoginFailureListener implements
			LoginFailuresListener {
		@Override
		public void onChallenged(ChallengedResult arg0) {
			JOptionPane.showMessageDialog(null, "Unexpected challenge received.");
		    remove(lp);
		    showDetailsPanel();
		}

		@Override
		public void onInvalidDetails() {
			JOptionPane.showMessageDialog(null, "Invalid username/password or session expired.");
		    remove(lp);
		    showDetailsPanel();
		}

		@Override
		public void onNotRegisteredForApplication() {
			JOptionPane.showMessageDialog(null, "User is not registered for application.");
		    remove(lp);
		    showDetailsPanel();
			
		}

		@Override
		public void onUserAlreadyRegistered() {
			JOptionPane.showMessageDialog(null, "Unexpected already registered received.");
		    remove(lp);
		    showDetailsPanel();
			
		}
	}
	public interface WhenLoggedIn {
        
        public void thenDo(Session session, Component loginForm, User user);
    }

    /**
     * Creates new form AjLogin
     */
    public AppjangleLogin(WhenLoggedIn callback) {
        this.callback = callback;
        initComponents();
        
        Preferences prefs = Preferences.userNodeForPackage(TextSync.class);
        
        final String sessionId = prefs.get("sessionId", null);
        
        if (sessionId != null) {
            loginWithSessionId(sessionId);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        detailsPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        emailField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        passwordFiled = new javax.swing.JPasswordField();
        jButton2 = new javax.swing.JButton();
        loginButton = new javax.swing.JButton();
        saveLoginData = new javax.swing.JCheckBox();

        setLayout(new java.awt.BorderLayout());

        jLabel3.setText("<html>You will need an appjangle account to use textsync. <br/>If you do not have one yet, you can get a free account at <a href=\"http://appjangle.com/\">appjangle.com</a>!</html>");

        jLabel1.setText("E-Mail:");

        jLabel2.setText("Password:");

        jButton2.setText("Close");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        loginButton.setText("Login");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        saveLoginData.setSelected(true);
        saveLoginData.setText("Save Session");

        javax.swing.GroupLayout detailsPanelLayout = new javax.swing.GroupLayout(detailsPanel);
        detailsPanel.setLayout(detailsPanelLayout);
        detailsPanelLayout.setHorizontalGroup(
            detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(detailsPanelLayout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(detailsPanelLayout.createSequentialGroup()
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(detailsPanelLayout.createSequentialGroup()
                                .addComponent(saveLoginData)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(emailField)
                            .addComponent(passwordFiled)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, detailsPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(loginButton)))
                .addContainerGap())
        );
        detailsPanelLayout.setVerticalGroup(
            detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(emailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(passwordFiled, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saveLoginData)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(loginButton))
                .addContainerGap(134, Short.MAX_VALUE))
        );

        add(detailsPanel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        JOptionPane.showMessageDialog(null, "You cannot use this application without signing in to appjangle.\nThis application will now close.");
        
        System.exit(0);
    }//GEN-LAST:event_jButton2ActionPerformed
    
    private void showDetailsPanel() {
        this.add(this.detailsPanel, BorderLayout.CENTER);
        this.detailsPanel.setVisible(true);
        this.validate();
        this.revalidate();
        
    }
    
    private void updateUiForLogin() {
        this.remove(this.detailsPanel);
        
        lp = new LogginInPanel();
        this.add(lp, BorderLayout.CENTER);
        lp.setVisible(true);
        
        lp.validate();
        lp.revalidate();
        
        this.validate();
        this.revalidate();
    }
    
    private void loginWithSessionId(final String sessionId) {
        
        updateUiForLogin();

        final Session session = Nextweb.createSession();
        
        LoginResult loginRq = session.login(sessionId);
        
        loginRq.catchLoginFailures(new DefaultLoginFailureListener());
        
        loginRq.get(new Closure<User>() {
			
			@Override
			public void apply(User user) {
				if (saveLoginData.isSelected()) {
                    Preferences prefs = Preferences.userNodeForPackage(TextSync.class);
                    
                    prefs.put("sessionId", user.sessionToken());
                    
                }
                
                
                callback.thenDo(session, AppjangleLogin.this, user);
			}
		});
        
       
        
    }
    
    
    
    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed

    	updateUiForLogin();
    	
    	 final Session session = Nextweb.createSession();
         
         LoginResult loginRq = session.login(emailField.getText(), String.valueOf(passwordFiled.getPassword()));
         
         loginRq.catchLoginFailures(new DefaultLoginFailureListener());
         
         loginRq.get(new Closure<User>() {
 			
 			@Override
 			public void apply(User user) {
 				if (saveLoginData.isSelected()) {
                     Preferences prefs = Preferences.userNodeForPackage(TextSync.class);
                     
                     prefs.put("sessionId", user.sessionToken());
                     
                 }
                 
                 
                 callback.thenDo(session, AppjangleLogin.this, user);
 			}
 		});
    	
      
       
        
    }//GEN-LAST:event_loginButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel detailsPanel;
    private javax.swing.JTextField emailField;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton loginButton;
    private javax.swing.JPasswordField passwordFiled;
    private javax.swing.JCheckBox saveLoginData;
    // End of variables declaration//GEN-END:variables
}
